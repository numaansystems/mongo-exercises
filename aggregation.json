db.prices.aggregate([
  {
    $sort: { security: 1, date: 1 } // Sort by security and date
  },
  {
    $group: {
      _id: "$security",
      prices: { $push: { date: "$date", price: "$price" } } // Group by security and push prices into an array
    }
  },
  {
    $project: {
      _id: 1,
      unchangedDays: {
        $reduce: {
          input: {
            $map: {
              input: { $slice: ["$prices", 1, { $subtract: [{ $size: "$prices" }, 1] }] },
              as: "pricePair",
              in: {
                $cond: [
                  { $eq: [ { $arrayElemAt: ["$prices.price", { $indexOfArray: ["$prices.date", "$$pricePair.date"] }] }, "$$pricePair.price" ] },
                  1,
                  0
                ]
              }
            }
          },
          initialValue: 0,
          in: { $add: ["$$value", "$$this"] }
        }
      }
    }
  }
])
